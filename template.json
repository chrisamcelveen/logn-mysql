{
  "requirements": {
    "cloud_provider": "aws",
    "prerequisites": [
      {
        "conditions": [
          "<<cloud.resources.vpcs>> not empty",
          "<<cloud.resources.subnets>> not empty"
        ],
        "message": "This service requires a VPC and subnet in your AWS account",
        "link": {
          "message": "Create VPC",
          "template": "atomizedhq/deploy-template-aws-vpc"
        }
      }
    ]
  },
  "build": [
    {
      "name": "Initializing Infrastructure",
      "action": "infrastructure.init"
    },
    {
      "name": "Planning Infrastructure",
      "action": "infrastructure.plan"
    },
    {
      "name": "Applying Infrastructure",
      "action": "infrastructure.apply"
    }
  ],
  "connections": {
    "default_ports": [3306]
  },
  "terraform": {
    "locals": {
      "name": "${trim(substr(\"<<project.alias>>-lognmysql-<<project.id>>\",0,63), \"-\")}",
      "public_user_data": "echo \"aws_eip.elastic_ip[0].id\"\naws ec2 associate-address --region <<cloud.region>> --instance-id \"$INSTANCE_ID\" --allocation-id \"aws_eip.elastic_ip[0].id\"",
      "user_data": "#!/bin/bash\n{\nINSTANCE_ID=\"$(curl -s http://169.254.169.254/latest/meta-data/instance-id)\"\necho \"$INSTANCE_ID\"\n${var.elastic_ip ? local.public_user_data : \"\"}\n} > /tmp/user_data_first_run 2>&1"
    },
    "output": {
      "instance_id": {
        "value": "${aws_instance.logn_mysql_server.id}"
      },
      "instance_availability_zone": {
        "value": "${aws_instance.logn_mysql_server.availability_zone}"
      },
      "instance_public_ip": {
        "value": "${var.elastic_ip ? aws_eip.elastic_ip[0].public_ip : aws_instance.logn_mysql_server.public_ip}"
      }
    },
    "data": {
      "aws_iam_policy_document": {
        "eip_associate": {
          "statement": {
            "sid": "eipAssociate",
            "actions": ["ec2:AssociateAddress"],
            "resources": ["*"]
          }
        }
      },
      "aws_region": {
        "current": {}
      },
      "aws_caller_identity": {
        "current": {}
      },
      "aws_subnet": {
        "subnet": {
          "id": "${var.subnet}"
        }
      }
    },
    "resource": {
      "aws_instance": {
        "logn_mysql_server": {
          "ami": "${var.image_id}",
          "associate_public_ip_address": "${data.aws_subnet.subnet.map_public_ip_on_launch ? true : false}",
          "availability_zone": "${data.aws_subnet.subnet.availability_zone}",
          "iam_instance_profile": "${aws_iam_instance_profile.iam_instance_profile.name}",
          "instance_type": "${var.instance_type}",
          "key_name": "${var.key_name}",
          "root_block_device": {
            "volume_size": "${var.volume_size}",
            "delete_on_termination": false
          },
          "subnet_id": "${var.subnet}",
          "tags": {
            "Name": "<<project.alias>>",
            "atomized": "true"
          },
          "user_data": "${base64encode(local.user_data)}",
          "vpc_security_group_ids": [
            "${aws_security_group.database_security_group.id}",
            "${aws_security_group.remote_access_security_group.id}"
          ]
        }
      },
      "aws_security_group": {
        "database_security_group": {
          "description": "allows traffic to the server",
          "egress": [
            {
              "cidr_blocks": ["0.0.0.0/0"],
              "description": "allow outbound",
              "from_port": 0,
              "ipv6_cidr_blocks": null,
              "prefix_list_ids": null,
              "protocol": "-1",
              "security_groups": null,
              "self": null,
              "to_port": 0
            }
          ],
          "ingress": "${jsondecode(var.ingress)}",
          "name": "${local.name}",
          "revoke_rules_on_delete": false,
          "tags": {
            "Name": "<<project.alias>>",
            "atomized": "true"
          },
          "vpc_id": "${var.network}"
        },
        "remote_access_security_group": {
          "description": "allows remote access for admin",
          "egress": [],
          "ingress": [
            {
              "cidr_blocks": ["${var.remote_ip}"],
              "description": "remoteAccess",
              "from_port": 22,
              "ipv6_cidr_blocks": null,
              "prefix_list_ids": null,
              "protocol": "tcp",
              "security_groups": null,
              "to_port": 22,
              "self": null
            }
          ],
          "name": "remote-access-${local.name}",
          "revoke_rules_on_delete": false,
          "tags": {
            "Name": "<<project.alias>>",
            "atomized": "true"
          },
          "vpc_id": "${var.network}"
        }
      },
      "aws_iam_instance_profile": {
        "iam_instance_profile": {
          "name": "${local.name}",
          "role": "${aws_iam_role.iam_role.name}"
        }
      },
      "aws_iam_role": {
        "iam_role": {
          "name": "${local.name}",
          "path": "/",
          "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Effect\":\"Allow\",\"Sid\":\"\"}]}"
        }
      },
      "aws_iam_role_policy_attachment": {
        "iam_policy-cloudwatch_access": {
          "role": "${aws_iam_role.iam_role.name}",
          "policy_arn": "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy"
        }
      },
      "aws_iam_role_policy": {
        "iam_policy-associate_elastic_ip": {
          "count": "${var.elastic_ip ? 1 : 0}",
          "name": "ec2AssociateAddress",
          "role": "${aws_iam_role.iam_role.name}",
          "policy": "${data.aws_iam_policy_document.eip_associate.json}"
        }
      },
      "aws_eip": {
        "elastic_ip": {
          "count": "${var.elastic_ip ? 1 : 0}",
          "vpc": true,
          "public_ipv4_pool": "amazon",
          "tags": {
            "Name": "<<project.alias>>",
            "atomized": "true"
          }
        }
      }
    },
    "variable": {
      "network": {
        "default": "<<project.metadata.network>>",
        "type": "string"
      },
      "subnet": {
        "default": "<<project.metadata.subnet>>",
        "type": "string"
      },
      "image_id": {
        "default": "<<project.metadata.image_id.default(ami-05f1b870da678463f)>>",
        "type": "string"
      },
      "instance_type": {
        "default": "<<project.metadata.instance_type.default(t3.micro)>>",
        "type": "string"
      },
      "key_name": {
        "default": "<<project.metadata.key_name>>",
        "type": "string"
      },
      "volume_size": {
        "default": "<<project.metadata.volume_size>>",
        "type": "number"
      },
      "elastic_ip": {
        "default": "<<project.metadata.elastic_ip>>",
        "type": "bool"
      },
      "remote_ip": {
        "default": "<<project.metadata.remote_ip>>",
        "type": "string"
      },
      "ingress": {
        "default": "<<project.connections.ingress().escape(quote)>>",
        "type": "string"
      }
    }
  },
  "fields": [
    {
      "sections": [
        {
          "fields": [
            {
              "label": "Service VPC",
              "name": "network",
              "optionsFrom": {
                "titleKey": "name",
                "valueKey": "vpc_id",
                "values": "<<cloud.resources.vpcs>>"
              },
              "onChange": [
                {
                  "values": [
                    {
                      "key": "subnet",
                      "value": null
                    }
                  ]
                }
              ],
              "required": true,
              "type": "select"
            },
            {
              "alerts": [
                {
                  "message": "Select a public subnet to access this server from the internet"
                }
              ],
              "label": "Subnet",
              "name": "subnet",
              "optionsFrom": {
                "visible": [
                  {
                    "conditions": ["valueFrom == <<project.metadata.network>>"],
                    "valueFrom": "vpc_id"
                  }
                ],
                "disabled": [
                  {
                    "conditions": [
                      "<<project.metadata.subnets>> not empty",
                      "valueFrom != <<cloud.resources.subnets[subnet_id is in <<project.metadata.subnets>>].assign_public_ip>>"
                    ],
                    "valueFrom": "assign_public_ip"
                  }
                ],
                "titleKey": "name",
                "valueKey": "subnet_id",
                "values": "<<cloud.resources.subnets>>"
              },
              "required": true,
              "type": "select",
              "visible": [
                {
                  "conditions": ["<<project.metadata.network>> not empty"]
                }
              ]
            },
            {
              "alerts": [
                {
                  "message": "Elastic IPs are static and public. Good to use for public databases."
                }
              ],
              "label": "Enable Elastic IP",
              "name": "elastic_ip",
              "default": "false",
              "type": "checkbox"
            }
          ]
        }
      ],
      "title": "Networking"
    },
    {
      "sections": [
        {
          "fields": [
            {
              "alerts": [
                {
                  "message": "https://aws.amazon.com/ec2/instance-types/"
                }
              ],
              "default": "t3.medium",
              "label": "Instance Type",
              "name": "instance_type",
              "required": true,
              "type": "text"
            },
            {
              "alerts": [
                {
                  "message": "Provide an existing AWS EC2 key pair to use to launch this instance"
                }
              ],
              "label": "AWS EC2 Key Pair",
              "name": "key_name",
              "type": "select",
              "optionsFrom": {
                "titleKey": "name",
                "valueKey": "name",
                "values": "<<cloud.resources.ec2_key_pairs>>"
              }
            },
            {
              "alerts": [
                {
                  "message": "Set the size of the server's root volume. Minimum 50 GiB"
                }
              ],
              "label": "Volume Size",
              "name": "volume_size",
              "type": "number",
              "default": "50"
            }
          ]
        }
      ],
      "title": "Instance Configuration"
    },
    {
      "sections": [
        {
          "fields": [
            {
              "connectionConfig": {
                "incomingSubnetsKey": "subnet",
                "networks": "<<cloud.resources.vpcs>>",
                "outgoingSubnetsKey": "subnet",
                "securityGroups": "<<cloud.resources.security_groups>>",
                "subnets": "<<cloud.resources.subnets>>"
              },
              "type": "connections"
            },
            {
              "alerts": [
                {
                  "message": "Specify an IP address to allow SSH onto the server for initialization"
                }
              ],
              "label": "Remote Access IP Address",
              "name": "remote_ip",
              "type": "text",
              "required": true
            }
          ]
        }
      ],
      "title": "Connections"
    }
  ]
}
